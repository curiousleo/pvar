parameters:
- name: setupEnvironmentSteps
  displayName: 'Setup stack and all other pre-build stuff'
  type: stepList
  default: []
- name: jobName
  type: string
- name: vmImage
  type: string
- name: os
  type: string
- name: stackRoot
  default: "$(System.DefaultWorkingDirectory)/.stack"
- name: stackWork
  default: ".stack-work"
- name: stackProjectPath
  displayName: "Path to the project. Must end with trailing slash"
  default: "$(Build.SourcesDirectory)/pvar/"

jobs:
- job: ${{ parameters.jobName }}
  timeoutInMinutes: 120
  variables:
    STACK_ROOT: "${{ parameters.stackRoot }}"
    STACK_WORK: "${{ parameters.stackWork }}"
    STACK_WORK_FULL: "${{ parameters.stackProjectPath }}${{ parameters.stackWork }}"
    BUILD_ARGS: "-j 2 --no-terminal --bench --no-run-benchmarks"
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix: # Commented out are teh jobs that fail on Windows
      # lts-3.22:
      #   RESOLVER: "lts-3.22" # 7.10.2
      #   STACK_YAML: "stack-lts-3.yaml"
      lts-6.35:
        RESOLVER: "lts-6.35" # 7.10.3
        STACK_YAML: "stack-lts-3.yaml"
      lts-7.24:
        RESOLVER: "lts-7.24" # ghc-8.0.1
        STACK_YAML: "stack-lts-7.yaml"
      lts-8.24:
        RESOLVER: "lts-8.24" # ghc-8.0.2
        STACK_YAML: "stack-lts-7.yaml"
      lts-10.10:
        RESOLVER: "lts-10.10" # ghc-8.2.2
        STACK_YAML: "stack-lts-10.yaml"
      lts-12.14:
        RESOLVER: "lts-12.14" # ghc-8.4.3
        STACK_YAML: "stack-lts-12.yaml"
      lts-12.26:
        RESOLVER: "lts-12.26" # ghc-8.4.4
        STACK_YAML: "stack-lts-12.yaml"
      # lts-13.9:
      #   RESOLVER: "lts-13.9" # ghc-8.6.3
      #   STACK_YAML: "stack-lts-12.yaml"
      lts-13.19:
        RESOLVER: "lts-13.19" # ghc-8.6.4
        STACK_YAML: "stack-lts-12.yaml"
      lts-13.30:
        RESOLVER: "lts-13.30" # ghc-8.6.5
        STACK_YAML: "stack-lts-12.yaml"
      lts-14.27:
        RESOLVER: "lts-14.27" # ghc-8.6.5
      lts-15.3:
        RESOLVER: "lts-15.3" # ghc-8.8.2
      # lts-15:
      #   RESOLVER: "lts-15" # ghc-8.8.3
      #   ALLOW_FAILURE: Windows
      # nightly:
      #   RESOLVER: "nightly"
      #   ALLOW_FAILURE: Windows
    maxParallel: 5
  steps:
  - task: Cache@2
    displayName: Cache STACK_ROOT
    inputs:
      key: '"${{ parameters.jobName }}" | "STACK_ROOT" | "$(RESOLVER)" | "$(Build.SourceBranch)"'
      path: "$(STACK_ROOT)"
      restoreKeys: |
        "${{ parameters.jobName }}" | "STACK_ROOT" | "$(RESOLVER)" | "$(Build.SourceBranch)"
        "${{ parameters.jobName }}" | "STACK_ROOT" | "$(RESOLVER)" | "refs/heads/master"
      cacheHitVar: STACK_ROOT_RESTORED
    continueOnError: true
  - task: Cache@2
    displayName: Cache STACK_WORK
    inputs:
      key: '"${{ parameters.jobName }}" | "STACK_WORK" | "$(RESOLVER)" | "$(Build.SourceBranch)"'
      path: "$(STACK_WORK_FULL)"
      restoreKeys: |
        "${{ parameters.jobName }}" | "STACK_WORK" | "$(RESOLVER)" | "$(Build.SourceBranch)"
        "${{ parameters.jobName }}" | "STACK_WORK" | "$(RESOLVER)" | "refs/heads/master"
      cacheHitVar: STACK_WORK_RESTORED
    continueOnError: true
  - ${{ each step in parameters.setupEnvironmentSteps }}:
    - ${{ each pair in step }}:
        ${{ pair.key }}: ${{ pair.value }}
  - task: Bash@3
    displayName: 'stack build'
    env:
      ARGS: "--resolver $(RESOLVER)"
    inputs:
      targetType: 'inline'
      script: |
        set -x
        ./stack ${ARGS} test --no-run-tests ${BUILD_ARGS} --haddock --no-haddock-deps
  - task: Bash@3
    displayName: 'pvar:test'
    env:
      ARGS: "--resolver $(RESOLVER)"
    inputs:
      targetType: 'inline'
      script: |
        set -x
        ./stack ${ARGS} test pvar:tests ${BUILD_ARGS}
  # - task: Bash@3
  #   displayName: 'pvar:doctest'
  #   env:
  #     ARGS: "--resolver $(RESOLVER)"
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       set -x
  #       ./stack ${ARGS} test pvar:doctests ${BUILD_ARGS}
